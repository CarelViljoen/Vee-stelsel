
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Download, FileSpreadsheet, FileText } from "lucide-react";

export default function DataExport({ data, loading }) {
  
  const exportToCsv = (filename, rows) => {
    if (!rows || rows.length === 0) {
      alert("Geen data beskikbaar om te eksporteer nie.");
      return;
    }
    
    const replacer = (key, value) => value === null ? '' : value;
    const header = Object.keys(rows[0]);
    const csv = [
      header.join(','),
      ...rows.map(row => header.map(fieldName => JSON.stringify(row[fieldName], replacer)).join(','))
    ].join('\r\n');

    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement("a");
    if (link.download !== undefined) {
      const url = URL.createObjectURL(blob);
      link.setAttribute("href", url);
      link.setAttribute("download", filename);
      link.style.visibility = 'hidden';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }
  };

  const exportOptions = [
    { label: "Tellings", data: data.tellings },
    { label: "Bemarking", data: data.bemarkings },
    { label: "Inentings", data: data.inentings },
    { label: "Reenval", data: data.reenvals },
    { label: "Voerkral", data: data.voerkrals },
    { label: "Kampe", data: data.kampe },
    { label: "Plase", data: data.plase },
  ];

  return (
    <Card className="shadow-lg bg-white/80 backdrop-blur-sm">
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-xl font-bold text-stone-800">
          <Download className="w-5 h-5 text-stone-600" />
          Data Eksport
        </CardTitle>
        <p className="text-sm text-stone-500">Laai jou data af in verskeie formate.</p>
      </CardHeader>
      <CardContent className="space-y-4">
        {exportOptions.map(option => (
          <div key={option.label} className="flex justify-between items-center p-3 bg-stone-50 rounded-lg">
            <span className="font-semibold text-stone-700">{option.label} Data</span>
            <div className="flex gap-2">
              <Button 
                variant="outline" 
                size="sm"
                onClick={() => exportToCsv(`${option.label.toLowerCase()}_export.csv`, option.data)}
                disabled={loading || !option.data || option.data.length === 0}
              >
                <FileSpreadsheet className="w-4 h-4 mr-2" /> CSV
              </Button>
            </div>
          </div>
        ))}
      </CardContent>
    </Card>
  );
}
