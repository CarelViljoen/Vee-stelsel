import React, { useState, useEffect } from "react";
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { GitCompareArrows, Save, X, ArrowRight } from "lucide-react";

export default function SkaapwerkForm({ kampe, plase, tellings, onSubmit, onCancel }) {
  const [bronKampId, setBronKampId] = useState("");
  const [doelKampId, setDoelKampId] = useState("");
  const [bronKampTelling, setBronKampTelling] = useState(null);
  const [bronKampOpmerkings, setBronKampOpmerkings] = useState("");
  const [formData, setFormData] = useState({
    datum: new Date().toISOString().split('T')[0],
    aantal_ooie: "",
    aantal_ramme: "",
    aantal_lammers_gemerk: "",
    aantal_lammers_ongemerk: "",
    aantal_lammers_kort: "",
    aantal_ooie_kort: "",
    aantal_ooie_dood: "",
    opmerkings: ""
  });

  useEffect(() => {
    if (bronKampId) {
      const laasteTelling = tellings
        .filter(t => t.kamp_id === bronKampId)
        .sort((a, b) => new Date(b.datum) - new Date(a.datum))[0];

      if (laasteTelling) {
        setBronKampTelling(laasteTelling);
        setBronKampOpmerkings(laasteTelling.opmerkings || "");
        setFormData(prev => ({
          ...prev,
          aantal_ooie: laasteTelling.aantal_ooie || "",
          aantal_ramme: laasteTelling.aantal_ramme || "",
          aantal_lammers_gemerk: laasteTelling.aantal_lammers_gemerk || "",
          aantal_lammers_ongemerk: laasteTelling.aantal_lammers_ongemerk || "",
          aantal_ooie_kort: laasteTelling.aantal_ooie_kort || "",
          aantal_ooie_dood: laasteTelling.aantal_ooie_dood || "",
        }));
      } else {
        setBronKampTelling(null);
        setBronKampOpmerkings("");
      }
    } else {
      setBronKampTelling(null);
      setBronKampOpmerkings("");
      setFormData(prev => ({
        ...prev,
        aantal_ooie: "",
        aantal_ramme: "",
        aantal_lammers_gemerk: "",
        aantal_lammers_ongemerk: "",
        aantal_ooie_kort: "",
        aantal_ooie_dood: "",
      }));
    }
  }, [bronKampId, tellings]);

  const handleChange = (field, value) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };
  
  const getPlaasNaam = (kampId) => {
    const kamp = kampe.find(k => k.id === kampId);
    if (!kamp) return '';
    const plaas = plase.find(p => p.id === kamp.plaas_id);
    return plaas?.naam || '';
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const { ...rawTellingData } = formData;
    
    const numerieseData = Object.entries(rawTellingData).reduce((acc, [key, value]) => {
      if (['datum', 'opmerkings'].includes(key)) {
        acc[key] = value;
      } else {
        acc[key] = value ? parseInt(value, 10) : 0;
      }
      return acc;
    }, {});

    const totaal_lewend = 
      (numerieseData.aantal_ooie || 0) +
      (numerieseData.aantal_ramme || 0) +
      (numerieseData.aantal_lammers_gemerk || 0) +
      (numerieseData.aantal_lammers_ongemerk || 0);

    const finaleData = {
      bronKampId,
      doelKampId,
      tellingData: {
        ...numerieseData,
        totaal_lewend,
      }
    };
    
    onSubmit(finaleData);
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: -20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -20 }}
      className="mb-8"
    >
      <Card className="shadow-lg bg-white/90 backdrop-blur-sm">
        <CardHeader className="p-6 border-b border-stone-100">
          <CardTitle className="flex items-center gap-2 text-xl font-bold text-stone-800">
            <GitCompareArrows className="w-5 h-5 text-amber-500" />
            Nuwe Skaapwerk Sessie
          </CardTitle>
        </CardHeader>
        <CardContent className="p-6">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div className="grid md:grid-cols-3 gap-6 items-center">
              <div className="space-y-2">
                <Label className="text-stone-700 font-semibold">Bronkamp</Label>
                <Select value={bronKampId} onValueChange={setBronKampId}>
                  <SelectTrigger><SelectValue placeholder="Kies bronkamp" /></SelectTrigger>
                  <SelectContent>
                    {kampe.map(kamp => (
                      <SelectItem key={kamp.id} value={kamp.id}>{kamp.naam} ({getPlaasNaam(kamp.id)})</SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
              <div className="text-center mt-6">
                <ArrowRight className="w-8 h-8 text-amber-500 mx-auto" />
              </div>
              <div className="space-y-2">
                <Label className="text-stone-700 font-semibold">Doelkamp *</Label>
                <Select value={doelKampId} onValueChange={setDoelKampId} required>
                  <SelectTrigger><SelectValue placeholder="Kies doelkamp" /></SelectTrigger>
                  <SelectContent>
                     {kampe.map(kamp => (
                      <SelectItem key={kamp.id} value={kamp.id}>{kamp.naam} ({getPlaasNaam(kamp.id)})</SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
            </div>
            
            {bronKampTelling && (
              <div className="p-4 bg-amber-50 rounded-lg border border-amber-200">
                <h4 className="font-semibold text-stone-700 mb-2">Huidige Telling in Bronkamp</h4>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-2 text-sm mb-3">
                  <p><strong>Ooie:</strong> {bronKampTelling.aantal_ooie || 0}</p>
                  <p><strong>Ramme:</strong> {bronKampTelling.aantal_ramme || 0}</p>
                  <p><strong>Gemerk:</strong> {bronKampTelling.aantal_lammers_gemerk || 0}</p>
                  <p><strong>Ongemerk:</strong> {bronKampTelling.aantal_lammers_ongemerk || 0}</p>
                  <p><strong>Ooie Kort:</strong> {bronKampTelling.aantal_ooie_kort || 0}</p>
                  <p><strong>Ooie Dood:</strong> {bronKampTelling.aantal_ooie_dood || 0}</p>
                </div>
                {bronKampOpmerkings && (
                  <div className="mt-3 p-2 bg-white rounded">
                    <p className="text-sm"><strong>Opmerkings:</strong> {bronKampOpmerkings}</p>
                  </div>
                )}
              </div>
            )}

            <div className="pt-4 border-t">
              <h3 className="text-lg font-semibold text-stone-700 mb-4">Nuwe Telling vir Doelkamp</h3>
              <div className="grid md:grid-cols-4 gap-4">
                <div className="space-y-2">
                  <Label>Ooie</Label>
                  <Input type="number" value={formData.aantal_ooie} onChange={e => handleChange('aantal_ooie', e.target.value)} />
                </div>
                <div className="space-y-2">
                  <Label>Ramme</Label>
                  <Input type="number" value={formData.aantal_ramme} onChange={e => handleChange('aantal_ramme', e.target.value)} />
                </div>
                <div className="space-y-2">
                  <Label>Lammers (Gemerk)</Label>
                  <Input type="number" value={formData.aantal_lammers_gemerk} onChange={e => handleChange('aantal_lammers_gemerk', e.target.value)} />
                </div>
                <div className="space-y-2">
                  <Label>Lammers (Ongemerk)</Label>
                  <Input type="number" value={formData.aantal_lammers_ongemerk} onChange={e => handleChange('aantal_lammers_ongemerk', e.target.value)} />
                </div>
              </div>
              
              <div className="grid md:grid-cols-2 gap-4 mt-4">
                <div className="space-y-2">
                  <Label>Ooie Kort</Label>
                  <Input type="number" value={formData.aantal_ooie_kort} onChange={e => handleChange('aantal_ooie_kort', e.target.value)} />
                </div>
                <div className="space-y-2">
                  <Label>Ooie Dood</Label>
                  <Input type="number" value={formData.aantal_ooie_dood} onChange={e => handleChange('aantal_ooie_dood', e.target.value)} />
                </div>
              </div>

              <div className="space-y-2 mt-4">
                <Label>Opmerkings vir Doelkamp</Label>
                <Textarea 
                  value={formData.opmerkings} 
                  onChange={e => handleChange('opmerkings', e.target.value)}
                  placeholder="Enige opmerkings oor hierdie skuif..."
                  rows={3}
                />
              </div>
            </div>
            
            <div className="flex justify-end gap-3 pt-4">
              <Button type="button" variant="outline" onClick={onCancel}>
                <X className="w-4 h-4 mr-2" />
                Kanselleer
              </Button>
              <Button type="submit" className="bg-blue-600 hover:bg-blue-700" disabled={!doelKampId}>
                <Save className="w-4 h-4 mr-2" />
                Stoor Telling
              </Button>
            </div>
          </form>
        </CardContent>
      </Card>
    </motion.div>
  );
}