import React, { useState } from "react";
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { MapPin, Save, X } from "lucide-react";

export default function PlaasForm({ plaas, onSubmit, onCancel }) {
  const [formData, setFormData] = useState(plaas || {
    naam: "",
    beskrywing: "",
    totale_oppervlakte: "",
    eienaar: "",
    ligging: ""
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    const submitData = {
      ...formData,
      totale_oppervlakte: formData.totale_oppervlakte ? parseFloat(formData.totale_oppervlakte) : undefined
    };
    onSubmit(submitData);
  };

  const handleChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: -20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -20 }}
      className="mb-8"
    >
      <Card className="shadow-lg bg-white/90 backdrop-blur-sm">
        <CardHeader className="p-6 border-b border-stone-100">
          <CardTitle className="flex items-center gap-2 text-xl font-bold text-stone-800">
            <MapPin className="w-5 h-5 text-emerald-500" />
            {plaas ? 'Wysig Plaas' : 'Nuwe Plaas'}
          </CardTitle>
        </CardHeader>
        <CardContent className="p-6">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="naam" className="text-stone-700 font-semibold">
                  Plaas Naam *
                </Label>
                <Input
                  id="naam"
                  value={formData.naam}
                  onChange={(e) => handleChange('naam', e.target.value)}
                  placeholder="Bv. Groenpunt Plaas"
                  required
                  className="border-stone-300 focus:border-emerald-500"
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="eienaar" className="text-stone-700 font-semibold">
                  Eienaar
                </Label>
                <Input
                  id="eienaar"
                  value={formData.eienaar}
                  onChange={(e) => handleChange('eienaar', e.target.value)}
                  placeholder="Naam van eienaar"
                  className="border-stone-300 focus:border-emerald-500"
                />
              </div>
            </div>

            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="totale_oppervlakte" className="text-stone-700 font-semibold">
                  Totale Oppervlakte (ha)
                </Label>
                <Input
                  id="totale_oppervlakte"
                  type="number"
                  step="0.1"
                  value={formData.totale_oppervlakte}
                  onChange={(e) => handleChange('totale_oppervlakte', e.target.value)}
                  placeholder="Oppervlakte in hektaar"
                  className="border-stone-300 focus:border-emerald-500"
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="ligging" className="text-stone-700 font-semibold">
                  Ligging
                </Label>
                <Input
                  id="ligging"
                  value={formData.ligging}
                  onChange={(e) => handleChange('ligging', e.target.value)}
                  placeholder="Bv. Wes-Kaap, Stellenbosch"
                  className="border-stone-300 focus:border-emerald-500"
                />
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="beskrywing" className="text-stone-700 font-semibold">
                Beskrywing
              </Label>
              <Textarea
                id="beskrywing"
                value={formData.beskrywing}
                onChange={(e) => handleChange('beskrywing', e.target.value)}
                placeholder="Beskryf die plaas en sy kenmerke..."
                rows={4}
                className="border-stone-300 focus:border-emerald-500"
              />
            </div>

            <div className="flex justify-end gap-3 pt-4">
              <Button
                type="button"
                variant="outline"
                onClick={onCancel}
                className="border-stone-300 text-stone-700 hover:bg-stone-50"
              >
                <X className="w-4 h-4 mr-2" />
                Kanselleer
              </Button>
              <Button
                type="submit"
                className="bg-emerald-600 hover:bg-emerald-700"
              >
                <Save className="w-4 h-4 mr-2" />
                {plaas ? 'Werk By' : 'Skep Plaas'}
              </Button>
            </div>
          </form>
        </CardContent>
      </Card>
    </motion.div>
  );
}