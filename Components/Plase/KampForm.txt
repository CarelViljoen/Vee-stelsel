import React, { useState } from "react";
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Wheat, Save, X } from "lucide-react";

export default function KampForm({ kamp, plaas, onSubmit, onCancel }) {
  const [formData, setFormData] = useState(kamp || {
    naam: "",
    oppervlakte: "",
    dravermoë: "",
    weidingstipe: "natuurlik",
    status: "aktief"
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    const submitData = {
      ...formData,
      oppervlakte: formData.oppervlakte ? parseFloat(formData.oppervlakte) : undefined,
      dravermoë: formData.dravermoë ? parseInt(formData.dravermoë) : undefined
    };
    onSubmit(submitData);
  };

  const handleChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: -20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -20 }}
      className="mb-8"
    >
      <Card className="shadow-lg bg-white/90 backdrop-blur-sm">
        <CardHeader className="p-6 border-b border-stone-100">
          <CardTitle className="flex items-center gap-2 text-xl font-bold text-stone-800">
            <Wheat className="w-5 h-5 text-amber-500" />
            {kamp ? 'Wysig Kamp' : `Nuwe Kamp vir ${plaas.naam}`}
          </CardTitle>
        </CardHeader>
        <CardContent className="p-6">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="naam" className="text-stone-700 font-semibold">
                  Kamp Naam *
                </Label>
                <Input
                  id="naam"
                  value={formData.naam}
                  onChange={(e) => handleChange('naam', e.target.value)}
                  placeholder="Bv. Noord Kamp"
                  required
                  className="border-stone-300 focus:border-amber-500"
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="status" className="text-stone-700 font-semibold">
                  Status
                </Label>
                <Select
                  value={formData.status}
                  onValueChange={(value) => handleChange('status', value)}
                >
                  <SelectTrigger className="border-stone-300 focus:border-amber-500">
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="aktief">Aktief</SelectItem>
                    <SelectItem value="rus">Rus</SelectItem>
                    <SelectItem value="onderhoud">Onderhoud</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>

            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="oppervlakte" className="text-stone-700 font-semibold">
                  Oppervlakte (ha)
                </Label>
                <Input
                  id="oppervlakte"
                  type="number"
                  step="0.1"
                  value={formData.oppervlakte}
                  onChange={(e) => handleChange('oppervlakte', e.target.value)}
                  placeholder="Oppervlakte in hektaar"
                  className="border-stone-300 focus:border-amber-500"
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="dravermoë" className="text-stone-700 font-semibold">
                  Dravermoë (aantal skape)
                </Label>
                <Input
                  id="dravermoë"
                  type="number"
                  value={formData.dravermoë}
                  onChange={(e) => handleChange('dravermoë', e.target.value)}
                  placeholder="Maksimum aantal skape"
                  className="border-stone-300 focus:border-amber-500"
                />
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="weidingstipe" className="text-stone-700 font-semibold">
                Weidingstipe
              </Label>
              <Select
                value={formData.weidingstipe}
                onValueChange={(value) => handleChange('weidingstipe', value)}
              >
                <SelectTrigger className="border-stone-300 focus:border-amber-500">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="natuurlik">Natuurlik</SelectItem>
                  <SelectItem value="aangeplant">Aangeplant</SelectItem>
                  <SelectItem value="gemeng">Gemeng</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div className="flex justify-end gap-3 pt-4">
              <Button
                type="button"
                variant="outline"
                onClick={onCancel}
                className="border-stone-300 text-stone-700 hover:bg-stone-50"
              >
                <X className="w-4 h-4 mr-2" />
                Kanselleer
              </Button>
              <Button
                type="submit"
                className="bg-amber-600 hover:bg-amber-700"
              >
                <Save className="w-4 h-4 mr-2" />
                {kamp ? 'Werk By' : 'Skep Kamp'}
              </Button>
            </div>
          </form>
        </CardContent>
      </Card>
    </motion.div>
  );
}