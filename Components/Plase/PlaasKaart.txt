import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { MapPin, Edit, Trash2, Wheat } from "lucide-react";

export default function PlaasKaart({ 
  plase, 
  selectedPlaas, 
  onSelectPlaas, 
  onEditPlaas, 
  onDeletePlaas 
}) {
  return (
    <Card className="shadow-lg bg-white/80 backdrop-blur-sm">
      <CardHeader className="p-6 border-b border-stone-100">
        <CardTitle className="flex items-center gap-2 text-xl font-bold text-stone-800">
          <MapPin className="w-5 h-5 text-emerald-500" />
          Plase
        </CardTitle>
      </CardHeader>
      <CardContent className="p-4">
        {plase.length > 0 ? (
          <div className="space-y-3">
            {plase.map((plaas) => (
              <div
                key={plaas.id}
                className={`p-4 rounded-xl border-2 cursor-pointer transition-all duration-300 ${
                  selectedPlaas?.id === plaas.id
                    ? 'border-emerald-400 bg-emerald-50 shadow-md'
                    : 'border-stone-200 hover:border-stone-300 hover:shadow-sm'
                }`}
                onClick={() => onSelectPlaas(plaas)}
              >
                <div className="flex items-start justify-between mb-3">
                  <div className="flex items-center gap-2">
                    <Wheat className="w-5 h-5 text-emerald-600" />
                    <h3 className="font-bold text-stone-800">{plaas.naam}</h3>
                  </div>
                  <div className="flex gap-1">
                    <Button
                      size="sm"
                      variant="ghost"
                      onClick={(e) => {
                        e.stopPropagation();
                        onEditPlaas(plaas);
                      }}
                      className="h-8 w-8 p-0 hover:bg-blue-100"
                    >
                      <Edit className="w-3 h-3 text-blue-600" />
                    </Button>
                    <Button
                      size="sm"
                      variant="ghost"
                      onClick={(e) => {
                        e.stopPropagation();
                        onDeletePlaas(plaas);
                      }}
                      className="h-8 w-8 p-0 hover:bg-red-100"
                    >
                      <Trash2 className="w-3 h-3 text-red-600" />
                    </Button>
                  </div>
                </div>
                
                <div className="space-y-2">
                  {plaas.eienaar && (
                    <p className="text-sm text-stone-600">{plaas.eienaar}</p>
                  )}
                  
                  <div className="flex items-center gap-2">
                    {plaas.totale_oppervlakte && (
                      <Badge variant="outline" className="text-xs">
                        {plaas.totale_oppervlakte} ha
                      </Badge>
                    )}
                    {plaas.ligging && (
                      <Badge variant="outline" className="text-xs">
                        {plaas.ligging}
                      </Badge>
                    )}
                  </div>
                  
                  {plaas.beskrywing && (
                    <p className="text-xs text-stone-500 line-clamp-2">
                      {plaas.beskrywing}
                    </p>
                  )}
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="text-center py-8 text-stone-500">
            <MapPin className="w-12 h-12 mx-auto mb-4 opacity-50" />
            <p>Geen plase nog nie</p>
          </div>
        )}
      </CardContent>
    </Card>
  );
}