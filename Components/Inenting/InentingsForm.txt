import React, { useState } from "react";
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Syringe, Save, X } from "lucide-react";

export default function InentingForm({ inenting, kampe, plase, onSubmit, onCancel }) {
  const [formData, setFormData] = useState(inenting || {
    kamp_id: "",
    datum: new Date().toISOString().split('T')[0],
    tipe_inenting: "",
    tipe_dier: "almal",
    aantal_diere: "",
    medikasie_naam: "",
    dosering: "",
    koste: "",
    volgende_inenting: "",
    opmerkings: ""
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    
    const submitData = {
      ...formData,
      aantal_diere: parseInt(formData.aantal_diere) || 0,
      koste: parseFloat(formData.koste) || 0
    };
    
    onSubmit(submitData);
  };

  const handleChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const getKampeByPlaas = () => {
    const grouped = {};
    kampe.forEach(kamp => {
      const plaas = plase.find(p => p.id === kamp.plaas_id);
      const plaasNaam = plaas?.naam || 'Onbekende Plaas';
      if (!grouped[plaasNaam]) {
        grouped[plaasNaam] = [];
      }
      grouped[plaasNaam].push(kamp);
    });
    return grouped;
  };

  const kampeByPlaas = getKampeByPlaas();

  return (
    <motion.div
      initial={{ opacity: 0, y: -20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -20 }}
      className="mb-8"
    >
      <Card className="shadow-lg bg-white/90 backdrop-blur-sm">
        <CardHeader className="p-6 border-b border-stone-100">
          <CardTitle className="flex items-center gap-2 text-xl font-bold text-stone-800">
            <Syringe className="w-5 h-5 text-green-500" />
            {inenting ? 'Wysig Inenting' : 'Nuwe Inenting'}
          </CardTitle>
        </CardHeader>
        <CardContent className="p-6">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="kamp_id" className="text-stone-700 font-semibold">
                  Kamp *
                </Label>
                <Select
                  value={formData.kamp_id}
                  onValueChange={(value) => handleChange('kamp_id', value)}
                  required
                >
                  <SelectTrigger className="border-stone-300 focus:border-green-500">
                    <SelectValue placeholder="Kies 'n kamp" />
                  </SelectTrigger>
                  <SelectContent>
                    {Object.entries(kampeByPlaas).map(([plaasNaam, plaasKampe]) => (
                      <div key={plaasNaam}>
                        <div className="px-2 py-1 text-xs font-semibold text-stone-500 bg-stone-100">
                          {plaasNaam}
                        </div>
                        {plaasKampe.map((kamp) => (
                          <SelectItem key={kamp.id} value={kamp.id}>
                            {kamp.naam}
                          </SelectItem>
                        ))}
                      </div>
                    ))}
                  </SelectContent>
                </Select>
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="datum" className="text-stone-700 font-semibold">
                  Datum *
                </Label>
                <Input
                  id="datum"
                  type="date"
                  value={formData.datum}
                  onChange={(e) => handleChange('datum', e.target.value)}
                  required
                  className="border-stone-300 focus:border-green-500"
                />
              </div>
            </div>

            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="tipe_inenting" className="text-stone-700 font-semibold">
                  Tipe Inenting *
                </Label>
                <Input
                  id="tipe_inenting"
                  value={formData.tipe_inenting}
                  onChange={(e) => handleChange('tipe_inenting', e.target.value)}
                  placeholder="Voer inenting tipe in (bv. Lamsiek)"
                  required
                  className="border-stone-300 focus:border-green-500"
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="tipe_dier" className="text-stone-700 font-semibold">
                  Tipe Dier *
                </Label>
                <Select
                  value={formData.tipe_dier}
                  onValueChange={(value) => handleChange('tipe_dier', value)}
                  required
                >
                  <SelectTrigger className="border-stone-300 focus:border-green-500">
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="almal">Alle Diere</SelectItem>
                    <SelectItem value="ooie">Net Ooie</SelectItem>
                    <SelectItem value="ramme">Net Ramme</SelectItem>
                    <SelectItem value="lammers">Net Lammers</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>

            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="aantal_diere" className="text-stone-700 font-semibold">
                  Aantal Diere Ge√Ønent *
                </Label>
                <Input
                  id="aantal_diere"
                  type="number"
                  min="0"
                  value={formData.aantal_diere}
                  onChange={(e) => handleChange('aantal_diere', e.target.value)}
                  placeholder="0"
                  required
                  className="border-stone-300 focus:border-green-500"
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="koste" className="text-stone-700 font-semibold">
                  Totale Koste (R)
                </Label>
                <Input
                  id="koste"
                  type="number"
                  step="0.01"
                  min="0"
                  value={formData.koste}
                  onChange={(e) => handleChange('koste', e.target.value)}
                  placeholder="0.00"
                  className="border-stone-300 focus:border-green-500"
                />
              </div>
            </div>

            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-2">
                <Label htmlFor="medikasie_naam" className="text-stone-700 font-semibold">
                  Medikasie/Entstof Naam
                </Label>
                <Input
                  id="medikasie_naam"
                  value={formData.medikasie_naam}
                  onChange={(e) => handleChange('medikasie_naam', e.target.value)}
                  placeholder="Bv. Multivax P Plus"
                  className="border-stone-300 focus:border-green-500"
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="dosering" className="text-stone-700 font-semibold">
                  Dosering per Dier
                </Label>
                <Input
                  id="dosering"
                  value={formData.dosering}
                  onChange={(e) => handleChange('dosering', e.target.value)}
                  placeholder="Bv. 2ml subcutaan"
                  className="border-stone-300 focus:border-green-500"
                />
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="volgende_inenting" className="text-stone-700 font-semibold">
                Volgende Inenting Datum
              </Label>
              <Input
                id="volgende_inenting"
                type="date"
                value={formData.volgende_inenting}
                onChange={(e) => handleChange('volgende_inenting', e.target.value)}
                className="border-stone-300 focus:border-green-500"
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="opmerkings" className="text-stone-700 font-semibold">
                Opmerkings
              </Label>
              <Textarea
                id="opmerkings"
                value={formData.opmerkings}
                onChange={(e) => handleChange('opmerkings', e.target.value)}
                placeholder="Enige addisionele opmerkings oor die inenting..."
                rows={3}
                className="border-stone-300 focus:border-green-500"
              />
            </div>

            <div className="flex justify-end gap-3 pt-4">
              <Button
                type="button"
                variant="outline"
                onClick={onCancel}
                className="border-stone-300 text-stone-700 hover:bg-stone-50"
              >
                <X className="w-4 h-4 mr-2" />
                Kanselleer
              </Button>
              <Button
                type="submit"
                className="bg-green-600 hover:bg-green-700"
              >
                <Save className="w-4 h-4 mr-2" />
                {inenting ? 'Werk By' : 'Stoor Inenting'}
              </Button>
            </div>
          </form>
        </CardContent>
      </Card>
    </motion.div>
  );
}