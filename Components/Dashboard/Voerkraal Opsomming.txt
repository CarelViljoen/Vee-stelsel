
import React, { useState } from 'react';
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Skeleton } from "@/components/ui/skeleton";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Wheat, ChevronDown, ChevronUp, Heart, Shield, PawPrint, Clock } from "lucide-react";

export default function VoerkralOpsomming({ voerkrals, plase, voerStoor, loading }) {
  const [selectedVoerkraal, setSelectedVoerkraal] = useState('');
  const [showDetails, setShowDetails] = useState({});

  if (loading) {
    return (
      <Card className="shadow-lg bg-white/80 backdrop-blur-sm">
        <CardHeader><Skeleton className="h-6 w-48" /></CardHeader>
        <CardContent><Skeleton className="h-32 w-full" /></CardContent>
      </Card>
    );
  }

  const getPlaasNaam = (plaasId) => {
    const plaas = plase.find(p => p.id === plaasId);
    return plaas?.naam || 'Onbekende Plaas';
  };

  const berekenDaglikseVerbruik = () => {
    return voerkrals.reduce((totaal, voerkraal) => {
      if (!voerkraal.aktief) return totaal;
      
      let voerkraalVerbruik = 0;
      Object.entries(voerkraal.skaap_getalle || {}).forEach(([tipe, aantal]) => {
        const kgPerDag = voerkraal.kg_per_kop_per_dag?.[tipe] || 0;
        voerkraalVerbruik += aantal * kgPerDag;
      });
      return totaal + voerkraalVerbruik;
    }, 0);
  };

  const berekenVoerBeskikbaarheid = () => {
    const totaleVoer = voerStoor.reduce((sum, stoor) => {
      return sum + ((stoor.aantal_sakke || 0) * (stoor.kg_per_sak || 0));
    }, 0);
    
    const daglikseVerbruik = berekenDaglikseVerbruik();
    return daglikseVerbruik > 0 ? Math.floor(totaleVoer / daglikseVerbruik) : 0;
 