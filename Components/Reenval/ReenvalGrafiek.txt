import React, { useState, useMemo } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';
import { format, getMonth, getYear, parseISO } from 'date-fns';
import { af } from 'date-fns/locale';

export default function ReenvalGrafiek({ reenvals, plase }) {
  const years = useMemo(() => {
    const yearSet = new Set(reenvals.map(r => getYear(parseISO(r.datum))));
    return Array.from(yearSet).sort((a, b) => b - a);
  }, [reenvals]);

  const [selectedYear, setSelectedYear] = useState(years[0] || new Date().getFullYear());
  const [selectedPlaas, setSelectedPlaas] = useState(plase[0]?.id || 'all');

  const chartData = useMemo(() => {
    const filteredReenvals = reenvals.filter(r => {
      const yearMatch = getYear(parseISO(r.datum)) === selectedYear;
      const plaasMatch = selectedPlaas === 'all' || r.plaas_id === selectedPlaas;
      return yearMatch && plaasMatch;
    });

    const monthlyData = Array.from({ length: 12 }, (_, i) => ({
      name: format(new Date(selectedYear, i), 'MMM', { locale: af }),
      reenval: 0
    }));

    filteredReenvals.forEach(r => {
      const month = getMonth(parseISO(r.datum));
      monthlyData[month].reenval += r.reenval_mm || 0;
    });
    
    return monthlyData;
  }, [reenvals, selectedYear, selectedPlaas, plase]);

  return (
    <Card className="shadow-lg bg-white/80 backdrop-blur-sm">
      <CardHeader className="flex flex-col md:flex-row justify-between items-center gap-4">
        <CardTitle className="text-xl font-bold text-stone-800">Maandelikse Reenval Grafiek</CardTitle>
        <div className="flex gap-4">
          <Select value={selectedPlaas} onValueChange={setSelectedPlaas}>
            <SelectTrigger className="w-[180px]">
              <SelectValue placeholder="Kies Plaas" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="all">Albei Plase</SelectItem>
              {plase.map(p => <SelectItem key={p.id} value={p.id}>{p.naam}</SelectItem>)}
            </SelectContent>
          </Select>
          <Select value={selectedYear} onValueChange={(val) => setSelectedYear(Number(val))}>
            <SelectTrigger className="w-[120px]">
              <SelectValue placeholder="Kies Jaar" />
            </SelectTrigger>
            <SelectContent>
              {years.map(y => <SelectItem key={y} value={y}>{y}</SelectItem>)}
            </SelectContent>
          </Select>
        </div>
      </CardHeader>
      <CardContent>
        <div style={{ width: '100%', height: 400 }}>
          <ResponsiveContainer>
            <BarChart
              data={chartData}
              margin={{
                top: 5,
                right: 30,
                left: 20,
                bottom: 5,
              }}
            >
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="name" />
              <YAxis label={{ value: 'Reenval (mm)', angle: -90, position: 'insideLeft' }} />
              <Tooltip />
              <Legend />
              <Bar dataKey="reenval" fill="#3b82f6" name="Reenval (mm)" />
            </BarChart>
          </ResponsiveContainer>
        </div>
      </CardContent>
    </Card>
  );
}