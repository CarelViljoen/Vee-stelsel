import React from "react";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Wheat, Edit, Trash2, Calendar, TrendingUp, DollarSign } from "lucide-react";
import { format } from "date-fns";
import { af } from "date-fns/locale";

const voerKleure = {
  lucerne: "bg-green-100 text-green-800",
  koring: "bg-yellow-100 text-yellow-800",
  mielies: "bg-amber-100 text-amber-800",
  peule: "bg-purple-100 text-purple-800",
  gemengde_voer: "bg-blue-100 text-blue-800",
  ander: "bg-gray-100 text-gray-800"
};

export default function VoerkralLys({ voerkrals, plase, onEdit, onDelete }) {
  const getPlaasNaam = (plaasId) => {
    const plaas = plase.find(p => p.id === plaasId);
    return plaas?.naam || 'Onbekende Plaas';
  };

  const getVoerNaam = (voerkral) => {
    if (voerkral.voer_tipe === 'ander') {
      return voerkral.ander_voer || 'Ander';
    }
    return voerkral.voer_tipe.replace('_', ' ').replace(/\b\w/g, l => l.toUpperCase());
  };

  const getMassaToename = (voerkral) => {
    if (voerkral.gemiddelde_massa_in && voerkral.gemiddelde_massa_uit) {
      return voerkral.gemiddelde_massa_uit - voerkral.gemiddelde_massa_in;
    }
    return null;
  };

  return (
    <Card className="shadow-lg bg-white/80 backdrop-blur-sm">
      <CardHeader className="p-6 border-b border-stone-100">
        <CardTitle className="flex items-center gap-2 text-xl font-bold text-stone-800">
          <Wheat className="w-5 h-5 text-orange-500" />
          Voerkral Rekords
        </CardTitle>
      </CardHeader>
      <CardContent className="p-0">
        {voerkrals.length > 0 ? (
          <div className="overflow-x-auto">
            <Table>
              <TableHeader>
                <TableRow className="bg-stone-50">
                  <TableHead className="font-semibold">Plaas</TableHead>
                  <TableHead className="font-semibold">Datum</TableHead>
                  <TableHead className="font-semibold">Skape</TableHead>
                  <TableHead className="font-semibold">Voer Tipe</TableHead>
                  <TableHead className="font-semibold">Voer (kg)</TableHead>
                  <TableHead className="font-semibold">Koste</TableHead>
                  <TableHead className="font-semibold">Massa Toename</TableHead>
                  <TableHead className="font-semibold">Aksies</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {voerkrals.map((voerkral) => {
                  const massaToename = getMassaToename(voerkral);
                  
                  return (
                    <TableRow key={voerkral.id} className="hover:bg-stone-50 transition-colors">
                      <TableCell>
                        <span className="font-medium text-stone-800">
                          {getPlaasNaam(voerkral.plaas_id)}
                        </span>
                      </TableCell>
                      <TableCell>
                        <div className="flex items-center gap-2">
                          <Calendar className="w-4 h-4 text-stone-500" />
                          {format(new Date(voerkral.datum), 'dd MMM yyyy', { locale: af })}
                        </div>
                      </TableCell>
                      <TableCell>
                        <span className="font-semibold text-emerald-600">
                          {voerkral.aantal_skape} skape
                        </span>
                      </TableCell>
                      <TableCell>
                        <Badge variant="secondary" className={voerKleure[voerkral.voer_tipe]}>
                          {getVoerNaam(voerkral)}
                        </Badge>
                      </TableCell>
                      <TableCell>
                        <div className="flex items-center gap-2">
                          <Wheat className="w-4 h-4 text-amber-600" />
                          <span className="font-semibold">
                            {voerkral.hoeveelheid_kg ? `${voerkral.hoeveelheid_kg}kg` : '-'}
                          </span>
                        </div>
                      </TableCell>
                      <TableCell>
                        <div className="flex items-center gap-2">
                          <DollarSign className="w-4 h-4 text-green-600" />
                          <span className="font-bold text-green-600">
                            R {(voerkral.totale_koste || 0).toFixed(2)}
                          </span>
                        </div>
                      </TableCell>
                      <TableCell>
                        {massaToename !== null ? (
                          <div className="flex items-center gap-2">
                            <TrendingUp className={`w-4 h-4 ${massaToename >= 0 ? 'text-green-500' : 'text-red-500'}`} />
                            <span className={`font-semibold ${massaToename >= 0 ? 'text-green-600' : 'text-red-600'}`}>
                              {massaToename >= 0 ? '+' : ''}{massaToename.toFixed(1)}kg
                            </span>
                          </div>
                        ) : (
                          <span className="text-stone-400">-</span>
                        )}
                      </TableCell>
                      <TableCell>
                        <div className="flex gap-2">
                          <Button
                            size="sm"
                            variant="ghost"
                            onClick={() => onEdit(voerkral)}
                            className="h-8 w-8 p-0 hover:bg-blue-100"
                          >
                            <Edit className="w-4 h-4 text-blue-600" />
                          </Button>
                          <Button
                            size="sm"
                            variant="ghost"
                            onClick={() => onDelete(voerkral)}
                            className="h-8 w-8 p-0 hover:bg-red-100"
                          >
                            <Trash2 className="w-4 h-4 text-red-600" />
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                  );
                })}
              </TableBody>
            </Table>
          </div>
        ) : (
          <div className="text-center py-12 text-stone-500">
            <Wheat className="w-16 h-16 mx-auto mb-4 opacity-50" />
            <p className="text-lg font-medium mb-2">Geen voerkral rekords nog nie</p>
            <p>Begin deur jou eerste voerkral entry te maak</p>
          </div>
        )}
      </CardContent>
    </Card>
  );
}