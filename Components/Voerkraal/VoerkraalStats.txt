import React from "react";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Wheat, TrendingUp, DollarSign, PawPrint } from "lucide-react";

export default function VoerkralStats({ voerkrals, plase }) {
  const getTotaleKoste = () => {
    return voerkrals.reduce((total, v) => total + (v.totale_koste || 0), 0);
  };

  const getTotaleSkape = () => {
    return voerkrals.reduce((total, v) => total + (v.aantal_skape || 0), 0);
  };

  const getTotaleVoer = () => {
    return voerkrals.reduce((total, v) => total + (v.hoeveelheid_kg || 0), 0);
  };

  const getGemMassaToename = () => {
    const withMassa = voerkrals.filter(v => 
      v.gemiddelde_massa_in && v.gemiddelde_massa_uit && 
      v.gemiddelde_massa_uit > v.gemiddelde_massa_in
    );
    
    if (withMassa.length === 0) return 0;
    
    const totaleToename = withMassa.reduce((total, v) => 
      total + (v.gemiddelde_massa_uit - v.gemiddelde_massa_in), 0);
    
    return totaleToename / withMassa.length;
  };

  const getVoerTipeStats = () => {
    const stats = {};
    voerkrals.forEach(v => {
      const tipe = v.voer_tipe === 'ander' ? v.ander_voer : v.voer_tipe;
      if (!stats[tipe]) {
        stats[tipe] = { kg: 0, koste: 0, entries: 0 };
      }
      stats[tipe].kg += v.hoeveelheid_kg || 0;
      stats[tipe].koste += v.totale_koste || 0;
      stats[tipe].entries += 1;
    });
    return stats;
  };

  const voerTipeStats = getVoerTipeStats();

  return (
    <div className="space-y-6">
      <Card className="shadow-lg bg-white/80 backdrop-blur-sm">
        <CardHeader className="p-6 border-b border-stone-100">
          <CardTitle className="flex items-center gap-2 text-xl font-bold text-stone-800">
            <Wheat className="w-5 h-5 text-orange-500" />
            Voerkral Stats
          </CardTitle>
        </CardHeader>
        <CardContent className="p-6">
          <div className="space-y-6">
            <div className="text-center p-4 bg-gradient-to-r from-orange-50 to-amber-50 rounded-xl">
              <DollarSign className="w-8 h-8 mx-auto mb-2 text-orange-600" />
              <p className="text-sm text-stone-600 mb-1">Totale Voer Koste</p>
              <p className="text-3xl font-bold text-stone-800">R {getTotaleKoste().toFixed(2)}</p>
            </div>

            <div className="grid grid-cols-1 gap-4">
              <div className="p-4 border border-stone-200 rounded-xl">
                <div className="flex items-center gap-2 mb-2">
                  <PawPrint className="w-4 h-4 text-emerald-500" />
                  <span className="text-sm font-semibold text-stone-700">Totale Skape Gevoer</span>
                </div>
                <p className="text-2xl font-bold text-stone-800">{getTotaleSkape()}</p>
              </div>

              <div className="p-4 border border-stone-200 rounded-xl">
                <div className="flex items-center gap-2 mb-2">
                  <Wheat className="w-4 h-4 text-amber-500" />
                  <span className="text-sm font-semibold text-stone-700">Totale Voer (kg)</span>
                </div>
                <p className="text-2xl font-bold text-stone-800">{getTotaleVoer().toFixed(1)}</p>
              </div>

              <div className="p-4 border border-stone-200 rounded-xl">
                <div className="flex items-center gap-2 mb-2">
                  <TrendingUp className="w-4 h-4 text-green-500" />
                  <span className="text-sm font-semibold text-stone-700">Gem. Massa Toename</span>
                </div>
                <p className="text-2xl font-bold text-stone-800">{getGemMassaToename().toFixed(1)}kg</p>
              </div>
            </div>

            <div className="p-4 bg-orange-50 rounded-xl">
              <h4 className="font-semibold text-stone-800 mb-3">Per Voer Tipe</h4>
              <div className="space-y-3">
                {Object.entries(voerTipeStats).map(([tipe, stats]) => (
                  <div key={tipe} className="flex justify-between items-center p-2 bg-white rounded-lg">
                    <span className="font-medium text-stone-700 capitalize">
                      {tipe.replace('_', ' ')}
                    </span>
                    <div className="text-right">
                      <p className="text-sm text-stone-600">{stats.kg.toFixed(1)}kg</p>
                      <p className="font-semibold text-orange-600">R {stats.koste.toFixed(2)}</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <div className="p-4 bg-amber-50 rounded-xl">
              <h4 className="font-semibold text-stone-800 mb-2">Voerkral Opsomming</h4>
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span className="text-stone-600">Totale Entries:</span>
                  <span className="font-semibold">{voerkrals.length}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-stone-600">Gem. Koste per kg:</span>
                  <span className="font-semibold">
                    R {getTotaleVoer() > 0 ? (getTotaleKoste() / getTotaleVoer()).toFixed(2) : '0.00'}
                  </span>
                </div>
                <div className="flex justify-between">
                  <span className="text-stone-600">Aktiewe Plase:</span>
                  <span className="font-semibold">{plase.length}</span>
                </div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}